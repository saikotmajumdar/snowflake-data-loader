create or replace procedure prepare_replication_schema(dbname string, schemaname string)
    returns varchar(252)
    language javascript

as
$$

try
{
    var query = 'CREATE DATABASE IF NOT EXISTS '+DBNAME+';';
    var stmt = snowflake.createStatement({sqlText:query})
    stmt.execute();
    result = "Database: "+DBNAME +" creation is success";
}
catch (err)
{
    return "Failed to create DB "+ DBNAME+", error: " + err;
}

try
{
    var query = 'CREATE SCHEMA IF NOT EXISTS '+DBNAME+'.'+SCHEMANAME+';';
    var stmt = snowflake.createStatement({sqlText:query})
    stmt.execute();
    result += "\nSchema: "+SCHEMANAME +" creation is success";
}
catch (err)
{
    return "Failed to create the schema "+ SCHEMANAME+", error: " + err;
}

var schemaName = SCHEMANAME;
var dbName = DBNAME;

const tbs = [
    "METERING_DAILY_HISTORY",
    "ACCESS_HISTORY",
    "METERING_HISTORY",
    "QUERY_HISTORY",
    "QUERY_HISTORY_RT",
    "WAREHOUSE_EVENTS_HISTORY",
    "WAREHOUSE_LOAD_HISTORY",
    "WAREHOUSE_METERING_HISTORY",
    "WAREHOUSES",
    "WAREHOUSE_PARAMETERS",
    "TABLES"
];

for (var i = 0; i < tbs.length; i++) {
    var drop_tbl = snowflake.createStatement({sqlText:'DROP TABLE IF EXISTS '+dbName+'.'+schemaName+'.'+tbs[i]+';'});
    try {
        drop_tbl.execute();
    }
    catch (err)
    {
        return "Failed: " + err;
    }
}

const queries = [];
queries[1] = 'create or replace TABLE '+dbName+'.'+schemaName+'.METERING_DAILY_HISTORY (SERVICE_TYPE VARCHAR(25),	USAGE_DATE DATE,	CREDITS_USED_COMPUTE NUMBER(38,9),	CREDITS_USED_CLOUD_SERVICES NUMBER(38,9),	CREDITS_USED NUMBER(38,9),	CREDITS_ADJUSTMENT_CLOUD_SERVICES NUMBER(38,10),	CREDITS_BILLED NUMBER(38,10));';
queries[0] = 'create or replace TABLE '+dbName+'.'+schemaName+'.ACCESS_HISTORY (QUERY_ID VARCHAR(128),QUERY_START_TIME TIMESTAMP_LTZ(9),USER_NAME VARCHAR(128),DIRECT_OBJECTS_ACCESSED ARRAY,BASE_OBJECTS_ACCESSED ARRAY,OBJECTS_MODIFIED ARRAY,OBJECT_MODIFIED_BY_DDL OBJECT,POLICIES_REFERENCED ARRAY);';
queries[2] = 'create or replace TABLE '+dbName+'.'+schemaName+'.METERING_HISTORY (	SERVICE_TYPE VARCHAR(26),	START_TIME TIMESTAMP_LTZ(6),	END_TIME TIMESTAMP_LTZ(6),	ENTITY_ID NUMBER(38,0),	NAME VARCHAR(16777216),	CREDITS_USED_COMPUTE NUMBER(38,9),	CREDITS_USED_CLOUD_SERVICES NUMBER(38,9),	CREDITS_USED NUMBER(38,9),	BYTES VARIANT,	"ROWS" NUMBER(38,0),	FILES VARIANT);';
queries[3] = 'create or replace TABLE '+dbName+'.'+schemaName+'.QUERY_HISTORY (	QUERY_ID VARCHAR(16777216),	QUERY_TEXT VARCHAR(16777216),	DATABASE_ID NUMBER(38,0),	DATABASE_NAME VARCHAR(16777216),	SCHEMA_ID NUMBER(38,0),	SCHEMA_NAME VARCHAR(16777216),	QUERY_TYPE VARCHAR(16777216),	SESSION_ID NUMBER(38,0),	USER_NAME VARCHAR(16777216),	ROLE_NAME VARCHAR(16777216),	WAREHOUSE_ID NUMBER(38,0),	WAREHOUSE_NAME VARCHAR(16777216),	WAREHOUSE_SIZE VARCHAR(16777216),	WAREHOUSE_TYPE VARCHAR(16777216),	CLUSTER_NUMBER NUMBER(38,0),	QUERY_TAG VARCHAR(16777216),	EXECUTION_STATUS VARCHAR(16777216),	ERROR_CODE VARCHAR(16777216),	ERROR_MESSAGE VARCHAR(16777216),	START_TIME TIMESTAMP_LTZ(6),	END_TIME TIMESTAMP_LTZ(6),	TOTAL_ELAPSED_TIME NUMBER(38,0),	BYTES_SCANNED NUMBER(38,0),	PERCENTAGE_SCANNED_FROM_CACHE FLOAT,	BYTES_WRITTEN NUMBER(38,0),	BYTES_WRITTEN_TO_RESULT NUMBER(38,0),	BYTES_READ_FROM_RESULT NUMBER(38,0),	ROWS_PRODUCED NUMBER(38,0),	ROWS_INSERTED NUMBER(38,0),	ROWS_UPDATED NUMBER(38,0),	ROWS_DELETED NUMBER(38,0),	ROWS_UNLOADED NUMBER(38,0),	BYTES_DELETED NUMBER(38,0),	PARTITIONS_SCANNED NUMBER(38,0),	PARTITIONS_TOTAL NUMBER(38,0),	BYTES_SPILLED_TO_LOCAL_STORAGE NUMBER(38,0),	BYTES_SPILLED_TO_REMOTE_STORAGE NUMBER(38,0),	BYTES_SENT_OVER_THE_NETWORK NUMBER(38,0),	COMPILATION_TIME NUMBER(38,0),	EXECUTION_TIME NUMBER(38,0),	QUEUED_PROVISIONING_TIME NUMBER(38,0),	QUEUED_REPAIR_TIME NUMBER(38,0),	QUEUED_OVERLOAD_TIME NUMBER(38,0),	TRANSACTION_BLOCKED_TIME NUMBER(38,0),	OUTBOUND_DATA_TRANSFER_CLOUD VARCHAR(16777216),	OUTBOUND_DATA_TRANSFER_REGION VARCHAR(16777216),	OUTBOUND_DATA_TRANSFER_BYTES NUMBER(38,0),	INBOUND_DATA_TRANSFER_CLOUD VARCHAR(16777216),	INBOUND_DATA_TRANSFER_REGION VARCHAR(16777216),	INBOUND_DATA_TRANSFER_BYTES NUMBER(38,0),	LIST_EXTERNAL_FILES_TIME NUMBER(38,0),	CREDITS_USED_CLOUD_SERVICES FLOAT,	RELEASE_VERSION VARCHAR(16777216),	EXTERNAL_FUNCTION_TOTAL_INVOCATIONS NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_SENT_ROWS NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_SENT_BYTES NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES NUMBER(38,0),	QUERY_LOAD_PERCENT NUMBER(38,0),	IS_CLIENT_GENERATED_STATEMENT BOOLEAN,	QUERY_ACCELERATION_BYTES_SCANNED NUMBER(38,0),	QUERY_ACCELERATION_PARTITIONS_SCANNED NUMBER(38,0),	QUERY_ACCELERATION_UPPER_LIMIT_SCALE_FACTOR NUMBER(38,0),	TRANSACTION_ID NUMBER(38,0),	CHILD_QUERIES_WAIT_TIME NUMBER(38,0),	ROLE_TYPE VARCHAR(16777216));';
queries[4] = 'create or replace TABLE '+dbName+'.'+schemaName+'.QUERY_HISTORY_RT (	QUERY_ID VARCHAR(16777216),	QUERY_TEXT VARCHAR(16777216),	DATABASE_NAME VARCHAR(16777216),	SCHEMA_NAME VARCHAR(16777216),	QUERY_TYPE VARCHAR(16777216),	SESSION_ID NUMBER(38,0),	USER_NAME VARCHAR(16777216),	ROLE_NAME VARCHAR(16777216),	WAREHOUSE_NAME VARCHAR(16777216),	WAREHOUSE_SIZE VARCHAR(16777216),	WAREHOUSE_TYPE VARCHAR(16777216),	CLUSTER_NUMBER NUMBER(38,0),	QUERY_TAG VARCHAR(16777216),	EXECUTION_STATUS VARCHAR(16777216),	ERROR_CODE NUMBER(38,0),	ERROR_MESSAGE VARCHAR(16777216),	START_TIME TIMESTAMP_LTZ(3),	END_TIME TIMESTAMP_LTZ(3),	TOTAL_ELAPSED_TIME NUMBER(38,0),	BYTES_SCANNED NUMBER(38,0),	ROWS_PRODUCED NUMBER(38,0),	COMPILATION_TIME NUMBER(38,0),	EXECUTION_TIME NUMBER(38,0),	QUEUED_PROVISIONING_TIME NUMBER(38,0),	QUEUED_REPAIR_TIME NUMBER(38,0),	QUEUED_OVERLOAD_TIME NUMBER(38,0),	TRANSACTION_BLOCKED_TIME NUMBER(38,0),	OUTBOUND_DATA_TRANSFER_CLOUD VARCHAR(16777216),	OUTBOUND_DATA_TRANSFER_REGION VARCHAR(16777216),	OUTBOUND_DATA_TRANSFER_BYTES NUMBER(38,0),	INBOUND_DATA_TRANSFER_CLOUD VARCHAR(16777216),	INBOUND_DATA_TRANSFER_REGION VARCHAR(16777216),	INBOUND_DATA_TRANSFER_BYTES NUMBER(38,0),	CREDITS_USED_CLOUD_SERVICES NUMBER(38,9),	LIST_EXTERNAL_FILE_TIME NUMBER(38,0),	RELEASE_VERSION VARCHAR(16777216),	EXTERNAL_FUNCTION_TOTAL_INVOCATIONS NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_SENT_ROWS NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_SENT_BYTES NUMBER(38,0),	EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES NUMBER(38,0),	IS_CLIENT_GENERATED_STATEMENT BOOLEAN);';
queries[5] = 'create or replace TABLE '+dbName+'.'+schemaName+'.WAREHOUSE_EVENTS_HISTORY (	TIMESTAMP TIMESTAMP_LTZ(6),	WAREHOUSE_ID NUMBER(38,0),	WAREHOUSE_NAME VARCHAR(16777216),	CLUSTER_NUMBER NUMBER(38,0),	EVENT_NAME VARCHAR(16777216),	EVENT_REASON VARCHAR(16777216),	EVENT_STATE VARCHAR(16777216),	USER_NAME VARCHAR(16777216),	ROLE_NAME VARCHAR(16777216),	QUERY_ID VARCHAR(16777216));';
queries[6] = 'create or replace TABLE '+dbName+'.'+schemaName+'.WAREHOUSE_LOAD_HISTORY (	START_TIME TIMESTAMP_LTZ(6),	END_TIME TIMESTAMP_LTZ(9),	WAREHOUSE_ID NUMBER(38,0),	WAREHOUSE_NAME VARCHAR(16777216),	AVG_RUNNING NUMBER(38,9),	AVG_QUEUED_LOAD NUMBER(38,9),	AVG_QUEUED_PROVISIONING NUMBER(38,9),	AVG_BLOCKED NUMBER(38,9));';
queries[7] = 'create or replace TABLE '+dbName+'.'+schemaName+'.WAREHOUSE_METERING_HISTORY (	START_TIME TIMESTAMP_LTZ(0),	END_TIME TIMESTAMP_LTZ(0),	WAREHOUSE_ID NUMBER(38,0),	WAREHOUSE_NAME VARCHAR(16777216),	CREDITS_USED NUMBER(38,9),	CREDITS_USED_COMPUTE NUMBER(38,9),	CREDITS_USED_CLOUD_SERVICES NUMBER(38,9));';
queries[8] = 'create or replace TABLE '+dbName+'.'+schemaName+'.WAREHOUSES (	"name" VARCHAR(16777216),	"state" VARCHAR(16777216),	"type" VARCHAR(16777216),	"size" VARCHAR(16777216),	"min_cluster_count" NUMBER(38,0),	"max_cluster_count" NUMBER(38,0),	"started_clusters" NUMBER(38,0),	"running" NUMBER(38,0),	"queued" NUMBER(38,0),	"is_default" VARCHAR(1),	"is_current" VARCHAR(1),	"auto_suspend" NUMBER(38,0),	"auto_resume" VARCHAR(16777216),	"available" NUMBER(38,0),	"provisioning" NUMBER(38,0),	"quiescing" NUMBER(38,0),	"other" NUMBER(38,0),	"created_on" TIMESTAMP_LTZ(9),	"resumed_on" TIMESTAMP_LTZ(9),	"updated_on" TIMESTAMP_LTZ(9),	"owner" VARCHAR(16777216),	"comment" VARCHAR(16777216),	"enable_query_acceleration" VARCHAR(16777216),	"query_acceleration_max_scale_factor" NUMBER(38,0),	"resource_monitor" VARCHAR(16777216),	"actives" NUMBER(38,0),	"pendings" NUMBER(38,0),	"failed" NUMBER(38,0),	"suspended" NUMBER(38,0),	"uuid" VARCHAR(16777216),	"scaling_policy" VARCHAR(16777216));';
queries[9]='create or replace TABLE '+dbName+'.'+schemaName+'.WAREHOUSE_PARAMETERS (	warehouse VARCHAR(1000),	KEY VARCHAR(1000),	VALUE VARCHAR(1000),	DEFAULT VARCHAR(1000),	LEVEL VARCHAR(1000),	DESCRIPTION VARCHAR(10000),	TYPE VARCHAR(100));';
queries[10]='create or replace TABLE '+dbName+'.'+schemaName+'.TABLES (	TABLE_ID NUMBER(38,0),	TABLE_NAME VARCHAR(16777216),	TABLE_SCHEMA_ID NUMBER(38,0),	TABLE_SCHEMA VARCHAR(16777216),	TABLE_CATALOG_ID NUMBER(38,0),	TABLE_CATALOG VARCHAR(16777216),	TABLE_OWNER VARCHAR(16777216),	TABLE_TYPE VARCHAR(16777216),	IS_TRANSIENT VARCHAR(3),	CLUSTERING_KEY VARCHAR(16777216),	ROW_COUNT NUMBER(38,0),	BYTES NUMBER(38,0),	RETENTION_TIME NUMBER(38,0),	SELF_REFERENCING_COLUMN_NAME VARCHAR(16777216),	REFERENCE_GENERATION VARCHAR(16777216),	USER_DEFINED_TYPE_CATALOG VARCHAR(16777216),	USER_DEFINED_TYPE_SCHEMA VARCHAR(16777216),	USER_DEFINED_TYPE_NAME VARCHAR(16777216),	IS_INSERTABLE_INTO VARCHAR(3),	IS_TYPED VARCHAR(3),	COMMIT_ACTION VARCHAR(16777216),	CREATED TIMESTAMP_LTZ(6),	LAST_ALTERED TIMESTAMP_LTZ(6),	LAST_DDL TIMESTAMP_LTZ(6),	LAST_DDL_BY VARCHAR(16777216),	DELETED TIMESTAMP_LTZ(6),	AUTO_CLUSTERING_ON VARCHAR(3),	COMMENT VARCHAR(16777216),	OWNER_ROLE_TYPE VARCHAR(13));';

var returnVal = "SUCCESS";
var error = "";
for (let i = 0; i < queries.length; i++) {
    var stmt = snowflake.createStatement({sqlText:queries[i]});
    try
    {
        stmt.execute();
    }
    catch (err)
    {
        error += "Failed: " + err;
    }
}
if(error.length > 0 ) {
    return error;
}
return returnVal;
$$;
;